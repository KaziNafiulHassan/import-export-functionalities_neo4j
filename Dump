Step 1: Define Search Criteria and Submit the Form

import requests
from bs4 import BeautifulSoup
import pandas as pd

# Define the search URL and parameters (adjust these parameters based on your criteria)
search_url = 'https://www.norman-network.com/nds/empodat/chemicalSearch.php'

payload = {
    'country': 'Germany',  # Example: Filtering by Germany
    'ecosystem': 'Waste water',  # Example: Ecosystem/Matrix filter
    'chemname': 'Mercury',  # Example: Substance name
    'submit': 'Search'
}

# Perform the search
response = requests.post(search_url, data=payload)
soup = BeautifulSoup(response.text, 'html.parser')

# Debugging: Check the response
#print(soup.prettify())


Step 2: Parse the Results
# Parse the resulting data
table = soup.find('table', {'class': 'resultsTable'})
if table:
    rows = table.find_all('tr')
    
    # Extract headers
    headers = [header.text.strip() for header in rows[0].find_all('th')]
    
    # Extract row data
    data = []
    for row in rows[1:]:
        cols = row.find_all('td')
        data.append({headers[i]: col.text.strip() for i, col in enumerate(cols)})
    
    # Convert to DataFrame
    df = pd.DataFrame(data)
    print(df.head())
else:
    print("No table found on the page.")


Step 3: Insert Data into Neo4j
from neo4j import GraphDatabase

def create_node(tx, label, properties):
    query = f"MERGE (n:{label} " + "{properties}) RETURN n"
    tx.run(query, properties=properties)

def import_data(uri, user, password, df):
    driver = GraphDatabase.driver(uri, auth=(user, password))
    with driver.session() as session:
        for _, row in df.iterrows():
            # Example: Create nodes for Substance and Sampling Site
            substance_properties = {'Name': row['Substance']}
            sampling_site_properties = {
                'Site': row['Sampling Site/Station'],
                'Country': row['Country'],
                'Date': row['Sampling Date']
            }
            session.write_transaction(create_node, 'Substance', substance_properties)
            session.write_transaction(create_node, 'SamplingSite', sampling_site_properties)
            
            # Create relationships if needed
            # MERGE (s:Substance)-[:OCCURRED_AT]->(site:SamplingSite)
            query = """
            MATCH (s:Substance {Name: $substance_name})
            MATCH (site:SamplingSite {Site: $site_name})
            MERGE (s)-[:OCCURRED_AT]->(site)
            """
            session.run(query, substance_name=row['Substance'], site_name=row['Sampling Site/Station'])

    driver.close()

# Example usage:
import_data("bolt://localhost:7687", "neo4j", "password", df)
